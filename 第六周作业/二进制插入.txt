package github;

/*
 * 题目描述

有两个32位整数n和m，请编写算法将m的二进制数位插入到n的二进制的第j到第i位,其中二进制的位数从低位数到高位且以0开始。 
给定两个数int n和int m，同时给定int j和int i，意义如题所述，请返回操作后的数，保证n的第j到第i位均为零，且m的二进制位数小于等于i-j+1。

测试样例：1024，19，2，6 
返回：1100

解答

这个问题的解决可以分为三个步骤：

将n中从第j位到第i位清零
将m执行位移操作，与j和i之间的位对齐
合并m与n

其中第一步比较麻烦。我们可以使用掩码来清零，除了第j到第i之间位为0外，这个掩码的其他位都是1。我们先创建掩码的左半部分，再创建掩码的右半部份，最终得到整个掩码。
*/
class BinInsert {
public:
    int binInsert(int n, int m, int j, int i) {
        // write code here
     int shiftedM = m<<j;

     int allOnes = ~0;
     int leftClearMask = allOnes<<(i+1);
     int rightClearMask = (allOnes<<j)-1;
     int clearMask = leftClearMask | rightClearMask;




     return  (clearMask & n) | shiftedM;

    }
};
 

